<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spritePlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health=100;
maxHealth=100;
var inst=instance_id;
airHaccel=.3;
groundHaccel=1;
grav = 1;
groundFrictionCoefficient=.4;
wallFrictionCoefficient=.4;
bounceCoefficient=0;  
topVspeed=31;
topHspeed=20;//15;
vAccel = .5;
hAccel = 1;
hspeed=0;
vspeed=0;
maxJumpCount=1;
jumpSpeed=15;//10;
jumpCount=0;
debug=0;
wallClimbSpeed=10//5;
wallJumpSpeed=10//5;
wallJumpCount=0;
maxWallJumpCount=100;//3;
wallClimbCount=0;
maxWallClimbCount=100;//3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gravity
if(!(collision_line(x-16,y+17,x+15,y+17,objBlock,false,false))){ //if no object is underneath
    if(!(collision_line(x-17,y+17,x+17,y+17,objBlock,false,false)) &amp;&amp; vspeed&lt;topVspeed)//If next to a wall
        vspeed+=grav;
    else{
        vspeed+=wallFrictionCoefficient;
        if(wallJumpCount&lt;maxWallJumpCount &amp;&amp; (keyboard_check_pressed(vk_space)/*||keyboard_check_pressed(vk_left)||keyboard_check_pressed(vk_right)*/)){ //Jump with opposite button in comments
            vspeed=-wallJumpSpeed;
            wallJumpCount+=1;
            if (collision_line(x+17,y-15,x+17,y+15,objBlock,false,false)) //right wall
            hspeed=-wallJumpSpeed
            else //left wall
            hspeed=wallJumpSpeed
            }
        else
        if(wallClimbCount&lt;maxWallClimbCount &amp;&amp; keyboard_check(vk_space) and vspeed&gt;=0){
            vspeed=-wallClimbSpeed;
            wallClimbCount+=1;
            }
        }
hAccel=airHaccel;
}
else
{
    wallJumpCount=0;
    wallClimbCount=0;
    jumpCount=0
    hAccel=groundHaccel;
    if (abs(hspeed)&lt;=groundFrictionCoefficient)
        hspeed=0;
    else{
        if (hspeed&gt;=groundFrictionCoefficient){hspeed-=groundFrictionCoefficient}
        else
        if (hspeed&lt;=groundFrictionCoefficient){hspeed+=groundFrictionCoefficient}
    }
}

//RUN
if(keyboard_check(vk_right)&amp;&amp;!(collision_line(x+17,y-15,x+17,y+15,objBlock,false,false))){
        if (self.hspeed&gt;=topHspeed)
            hspeed=topHspeed;
        else
            hspeed+=hAccel;
        }
    else     
        if(keyboard_check(vk_left)&amp;&amp;!(collision_line(x-17,y-15,x-17,y+15,objBlock,false,false))){
            if (self.hspeed&lt;=-topHspeed)
                hspeed=-topHspeed;
            else
                hspeed-=hAccel;
        }

//FALL
if(keyboard_check(vk_down)&amp;&amp; !(collision_line(x-16,y+16,x+16,y+16,objBlock,false,false))){
    if (vspeed&lt;0) vspeed=0;
    //if (vspeed&gt;=topVspeed)
        vspeed=topVspeed;
        //else
        //vspeed+=vAccel;
}
else //JUMP    
if(jumpCount&lt;maxJumpCount &amp;&amp; keyboard_check(vk_space)&amp;&amp; !(collision_line(x-15,y-16,x+15,y-16,objBlock,false,false))){
        vspeed=-jumpSpeed;
        jumpCount+=1;
}

//Horizontal Collision        
inst = collision_rectangle(x-16+hspeed,y-15,x+16+hspeed,y+15, objBlock, false, false);     
if(inst!=noone &amp;&amp; abs(hspeed)&gt;0){
    if (hspeed&gt;0) x = inst.x-32;
    else x = inst.x+32;
particles(x,y,spriteParticle,0,2,1,10,0,360,.2,2,10);
hspeed=-hspeed*bounceCoefficient;
}

//Vertical Collision
inst = collision_rectangle(x-16,y-15+vspeed,x+15,y+15+vspeed, objBlock, false, false);     
if(inst!=noone){
if (vspeed&gt;0){ 
    y = inst.y-32;
    }
else{ 
    y = inst.y+32;
}
    if (abs(vspeed)&gt;bounceCoefficient+grav)                     //prevent micro bouncing
        vspeed=-vspeed*bounceCoefficient;
    else
        vspeed=0;
   
}

//rotation
image_angle-=hspeed*8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDamageBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health-=.1
if (health&lt;=0)
room_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spriteHealth,0,view_xport[0]+16,view_xport[0]+16,2,2,0,c_white,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
//draw_rectangle(x-16+hspeed,y-16,x+16+hspeed,y+16,1);
//draw_rectangle(x-16,y-16+vspeed,x+16,y+16+vspeed,1);
if(!(collision_line(x-16,y+17,x+15,y+17,objBlock,false,false)))
    if(!(collision_line(x-17,y+17,x+17,y+17,objBlock,false,false)) &amp;&amp; vspeed&lt;topVspeed)
        draw_rectangle_colour(x-16,y-16+vspeed,x+16,y+16+vspeed,c_red,c_red,c_red,c_red,1);
    else
       draw_rectangle_colour(x-16,y-16+vspeed,x+16,y+16+vspeed,c_blue,c_blue,c_blue,c_blue,1);
//draw_text(x,y-32,debug);
//health
draw_sprite_ext(spriteHealth,0,x-20,y-32,.5,.5,0,c_white,1)
//draw_rectangle_colour(x-20,y-32,x-20-(health*.5),y-32,c_red,c_red,c_red,c_red,c_red)
//
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
